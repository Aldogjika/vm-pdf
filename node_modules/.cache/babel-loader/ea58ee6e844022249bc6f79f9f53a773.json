{"ast":null,"code":"var _jsxFileName = \"/Users/aldo/Downloads/React/vm-pdf/src/Row.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  imgUrl,\n  description\n}) {\n  const [readMore, setReadMore] = useState(false);\n  const [imgBackground, setImgBackground] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(imgUrl); //IF WE HAVE A VARIABLE LIKE 'fetchUrl', THAT IS OUTSIDE OF BLOCK, WE HAVE DECLARE AT THE END 👇🏻\n\n      setImgBackground(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n\n    fetchData();\n  }, [imgUrl]);\n\n  const handleClick = status => {\n    if (readMore) {\n      setReadMore(false);\n    } else {\n      setReadMore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__banner\",\n    style: {\n      backgroundImage: `url(${base_url}${imgBackground === null || imgBackground === void 0 ? void 0 : imgBackground.backdrop_path})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__bannerOverlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__bannerButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"row__bannerButton\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"READ MORE\"))), readMore && /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"row__description\",\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/aldo/Downloads/React/vm-pdf/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","imgUrl","description","readMore","setReadMore","imgBackground","setImgBackground","fetchData","request","get","data","results","Math","floor","random","length","handleClick","status","backgroundImage","backdrop_path","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAb,EAA6C;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUR,MAAV,CAAtB,CADyB,CACgB;;AAEzCK,MAAAA,gBAAgB,CACdE,OAAO,CAACE,IAAR,CAAaC,OAAb,CACEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,OAAO,CAACE,IAAR,CAAaC,OAAb,CAAqBI,MAArC,GAA8C,CAAzD,CADF,CADc,CAAhB;AAKA,aAAOP,OAAP;AACD;;AAEDD,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACN,MAAD,CAbM,CAAT;;AAeA,QAAMe,WAAW,GAAIC,MAAD,IAAY;AAC9B,QAAId,QAAJ,EAAc;AACZC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADF,eAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAE;AACLkB,MAAAA,eAAe,EAAG,OAAMpB,QAAS,GAAEO,aAAlB,aAAkBA,aAAlB,uBAAkBA,aAAa,CAAEc,aAAc;AAD3D,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAEH,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAPF,CAFF,EAgBGb,QAAQ,iBACP;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,uBAAuB,EAAE;AAAEiB,MAAAA,MAAM,EAAElB;AAAV,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADF;AAyBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, imgUrl, description }) {\n  const [readMore, setReadMore] = useState(false);\n  const [imgBackground, setImgBackground] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(imgUrl); //IF WE HAVE A VARIABLE LIKE 'fetchUrl', THAT IS OUTSIDE OF BLOCK, WE HAVE DECLARE AT THE END 👇🏻\n\n      setImgBackground(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n\n    fetchData();\n  }, [imgUrl]);\n\n  const handleClick = (status) => {\n    if (readMore) {\n      setReadMore(false);\n    } else {\n      setReadMore(true);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div\n        className=\"row__banner\"\n        style={{\n          backgroundImage: `url(${base_url}${imgBackground?.backdrop_path})`,\n        }}\n      >\n        <div className=\"row__bannerOverlay\"></div>\n        <div className=\"row__bannerButtons\">\n          <button className=\"row__bannerButton\" onClick={handleClick}>\n            READ MORE\n          </button>\n        </div>\n      </div>\n\n      {readMore && (\n        <h1\n          className=\"row__description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        ></h1>\n      )}\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}
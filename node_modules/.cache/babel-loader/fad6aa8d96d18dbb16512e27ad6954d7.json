{"ast":null,"code":"var _jsxFileName = \"/Users/aldo/Downloads/React/netflix-prototype/netflix/src/Row.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nconst base_url = \"http://image.tmdb.org/t/p/\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //IF WE HAVE A VARIABLE LIKE 'fetchUrl', THAT IS OUTSIDE OF BLOCK, WE HAVE DECLARE AT THE END üëáüèª\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(\"movies\", movies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, movies.map(movie => {\n    /*#__PURE__*/\n    React.createElement(\"img\", {\n      className: \"row__poster\",\n      src: `${base_url} ${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/aldo/Downloads/React/netflix-prototype/netflix/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,QAAQ,GAAG,4BAAjB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAb,EAAkC;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,QAAV,CAAtB,CADyB,CACkB;;AAC3CE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AAEDD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;AAUAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADF,eAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AACrB;AAAA;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,GAAG,EAAG,GAAEd,QAAS,IAAGc,KAAK,CAACC,WAAY,EAFxC;AAGE,MAAA,GAAG,EAAED,KAAK,CAACE,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD,GANA,CADH,CAHF,CADF;AAeD;;AAED,eAAef,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\n\nconst base_url = \"http://image.tmdb.org/t/p/\";\n\nfunction Row({ title, fetchUrl }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //IF WE HAVE A VARIABLE LIKE 'fetchUrl', THAT IS OUTSIDE OF BLOCK, WE HAVE DECLARE AT THE END üëáüèª\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  console.log(\"movies\", movies);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => {\n          <img\n            className=\"row__poster\"\n            src={`${base_url} ${movie.poster_path}`}\n            alt={movie.name}\n          />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}